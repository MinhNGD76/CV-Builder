openapi: 3.0.0
info:
  title: CV Builder User Service API
  description: API for managing user profiles in the CV Builder system
  version: 1.0.0
  contact:
    name: CV Builder Team
    
servers:
  - url: http://user:3000
    description: User Service

paths:
  /user/me:
    post:
      summary: Create user profile
      description: Creates a user profile associated with the authenticated user
      operationId: createProfile
      tags:
        - User Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullName
              properties:
                fullName:
                  type: string
                  example: John Doe
                avatarUrl:
                  type: string
                  example: https://example.com/avatar.jpg
                bio:
                  type: string
                  example: Experienced software developer with 5+ years in web development.
      responses:
        '201':
          description: Profile successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile already exists for this user
        '401':
          description: Unauthorized
        '500':
          description: Server error
          
    get:
      summary: Get current user profile
      description: Retrieves the profile of the authenticated user
      operationId: getProfile
      tags:
        - User Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
        '404':
          description: Profile not found
        '500':
          description: Server error
          
    put:
      summary: Update user profile
      description: Updates the profile of the authenticated user
      operationId: updateProfile
      tags:
        - User Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: John Doe
                avatarUrl:
                  type: string
                  example: https://example.com/avatar.jpg
                bio:
                  type: string
                  example: Experienced software developer with 5+ years in web development.
      responses:
        '200':
          description: Profile successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
        '404':
          description: Profile not found
        '500':
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserProfile:
      type: object
      required:
        - userId
        - fullName
      properties:
        userId:
          type: string
          description: ID of the user from Auth service
          example: 60d21b4667d0d8992e610c85
        fullName:
          type: string
          description: User's full name
          example: John Doe
        avatarUrl:
          type: string
          description: URL to user's avatar image
          example: https://example.com/avatar.jpg
        bio:
          type: string
          description: User's biographical information
          example: Experienced software developer with 5+ years in web development.
        createdAt:
          type: string
          format: date-time
          description: Profile creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
